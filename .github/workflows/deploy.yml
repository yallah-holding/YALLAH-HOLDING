name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: |
          npm install -g html-minifier-terser
          npm install -g clean-css-cli
          npm install -g uglify-js
          npm install -g svgo

      - name: Optimize assets
        run: |
          # Minify HTML
          html-minifier-terser --collapse-whitespace --remove-comments --remove-optional-tags --remove-redundant-attributes --remove-script-type-attributes --remove-tag-whitespace --use-short-doctype --minify-css true --minify-js true index.html -o index.html
          
          # Optimize images if they exist
          if [ -d "assets/images" ]; then
            find assets/images -type f -name "*.jpg" -exec jpegoptim --strip-all --max=85 {} \;
            find assets/images -type f -name "*.png" -exec optipng -o5 {} \;
            find assets/images -type f -name "*.svg" -exec svgo {} \;
          fi

          # Optimize CSS
          if [ -d "assets/css" ]; then
            find assets/css -name "*.css" -exec cleancss -o {} {} \;
          fi

          # Optimize JavaScript
          if [ -d "assets/js" ]; then
            find assets/js -name "*.js" -exec uglifyjs {} -o {} \;
          fi

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: .
          token: ${{ secrets.GITHUB_TOKEN }}
          repository-name: yallah-holding/YALLAH-HOLDING
          target-folder: /
          clean: true
          single-commit: true 